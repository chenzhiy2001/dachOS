{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/chenzhiyang/projects/github/dachOS/src/quark/src/algorithm","program":"/Users/chenzhiyang/.rustup/toolchains/nightly-aarch64-apple-darwin/bin/rls","arguments":[],"output":"/Users/chenzhiyang/projects/github/dachOS/src/quark/src/algorithm/target/rls/riscv64gc-unknown-none-elf/debug/deps/libalgorithm-dbedddc380eb1a02.rmeta"},"prelude":{"crate_id":{"name":"algorithm","disambiguator":[10775250289519125526,3695652320713676102]},"crate_root":"src","external_crates":[{"file_name":"/Users/chenzhiyang/projects/github/dachOS/src/quark/src/algorithm/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[13299882144998150042,748160354293856009]}},{"file_name":"/Users/chenzhiyang/projects/github/dachOS/src/quark/src/algorithm/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17395979777752655246,10227200168389810530]}},{"file_name":"/Users/chenzhiyang/projects/github/dachOS/src/quark/src/algorithm/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15452736774982314751,16087793956255270130]}},{"file_name":"/Users/chenzhiyang/projects/github/dachOS/src/quark/src/algorithm/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[3411280779291024088,13353246503672782863]}},{"file_name":"/Users/chenzhiyang/projects/github/dachOS/src/quark/src/algorithm/src/allocator/bitmap_vector_allocator.rs","num":5,"id":{"name":"bit_field","disambiguator":[3856475827145505686,12704936596515088730]}}],"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":189,"line_start":1,"line_end":10,"column_start":1,"column_end":22}},"imports":[{"kind":"ExternCrate","ref_id":null,"span":{"file_name":"src/lib.rs","byte_start":144,"byte_end":149,"line_start":6,"line_end":6,"column_start":14,"column_end":19},"alias_span":null,"name":"alloc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1477,"byte_end":1486,"line_start":3,"line_end":3,"column_start":12,"column_end":21},"alias_span":null,"name":"Allocator","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":4,"index":5981},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1500,"byte_end":1503,"line_start":4,"line_end":4,"column_start":13,"column_end":16},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":4,"index":5},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1500,"byte_end":1503,"line_start":4,"line_end":4,"column_start":13,"column_end":16},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":4,"index":6769},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1510,"byte_end":1513,"line_start":4,"line_end":4,"column_start":23,"column_end":26},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2332,"byte_end":2347,"line_start":3,"line_end":3,"column_start":12,"column_end":27},"alias_span":null,"name":"VectorAllocator","value":"","parent":{"krate":0,"index":23}},{"kind":"Use","ref_id":{"krate":5,"index":22},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2364,"byte_end":2372,"line_start":4,"line_end":4,"column_start":16,"column_end":24},"alias_span":null,"name":"BitArray","value":"","parent":{"krate":0,"index":23}},{"kind":"Use","ref_id":{"krate":1,"index":2527},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2389,"byte_end":2392,"line_start":5,"line_end":5,"column_start":16,"column_end":19},"alias_span":null,"name":"min","value":"","parent":{"krate":0,"index":23}},{"kind":"Use","ref_id":{"krate":0,"index":17},"span":{"file_name":"src/allocator/mod.rs","byte_start":1204,"byte_end":1220,"line_start":28,"line_end":28,"column_start":28,"column_end":44},"alias_span":null,"name":"StackedAllocator","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"src/allocator/mod.rs","byte_start":1255,"byte_end":1276,"line_start":29,"line_end":29,"column_start":34,"column_end":55},"alias_span":null,"name":"BitmapVectorAllocator","value":"","parent":{"krate":0,"index":5}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/lib.rs","byte_start":187,"byte_end":188,"line_start":10,"line_end":10,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":189,"line_start":1,"line_end":10,"column_start":1,"column_end":22},"name":"","qualname":"::","value":"src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":62}],"decl_id":null,"docs":" 一些可能用到，而又不好找库的数据结构","sig":null,"attributes":[{"value":"/ 一些可能用到，而又不好找库的数据结构","span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":58,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"src/lib.rs","byte_start":59,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ 以及有多种实现，会留作业的数据结构","span":{"file_name":"src/lib.rs","byte_start":63,"byte_end":118,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"no_std","span":{"file_name":"src/lib.rs","byte_start":119,"byte_end":129,"line_start":4,"line_end":4,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"src/allocator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocator","qualname":"::allocator","value":"src/allocator/mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":23},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" 负责分配 / 回收的数据结构\n","sig":null,"attributes":[{"value":"/ 负责分配 / 回收的数据结构","span":{"file_name":"src/allocator/mod.rs","byte_start":191,"byte_end":231,"line_start":1,"line_end":1,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stacked_allocator","qualname":"::allocator::stacked_allocator","value":"src/allocator/stacked_allocator.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":19}],"decl_id":null,"docs":" 提供栈结构实现的分配器 [`StackedAllocator`]\n","sig":null,"attributes":[{"value":"/ 提供栈结构实现的分配器 [`StackedAllocator`]","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1406,"byte_end":1464,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":17},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1689,"byte_end":1705,"line_start":10,"line_end":10,"column_start":12,"column_end":28},"name":"StackedAllocator","qualname":"::allocator::stacked_allocator::StackedAllocator","value":"StackedAllocator { list }","parent":null,"children":[{"krate":0,"index":18}],"decl_id":null,"docs":" 使用栈结构实现分配器","sig":null,"attributes":[{"value":"/ 使用栈结构实现分配器","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1517,"byte_end":1551,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1552,"byte_end":1555,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ 在 `Vec` 末尾进行加入 / 删除。","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1556,"byte_end":1600,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/ 每个元素 tuple `(start, end)` 表示 [start, end) 区间为可用。","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1601,"byte_end":1677,"line_start":9,"line_end":9,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":18},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1712,"byte_end":1716,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"list","qualname":"::allocator::stacked_allocator::StackedAllocator::list","value":"alloc::vec::Vec<(usize, usize)>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741844},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1791,"byte_end":1799,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StackedAllocator as allocator::Allocator>::new::capacity","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1787,"byte_end":1790,"line_start":15,"line_end":15,"column_start":8,"column_end":11},"name":"new","qualname":"<StackedAllocator as allocator::Allocator>::new","value":"fn new(usize) -> Self","parent":{"krate":0,"index":46},"children":[],"decl_id":{"krate":0,"index":47},"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741845},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1907,"byte_end":1911,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"name":"self","qualname":"<StackedAllocator as allocator::Allocator>::alloc::self","value":"&mut allocator::stacked_allocator::StackedAllocator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1896,"byte_end":1901,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"alloc","qualname":"<StackedAllocator as allocator::Allocator>::alloc","value":"fn alloc(&mut Self) -> Option<usize>","parent":{"krate":0,"index":46},"children":[],"decl_id":{"krate":0,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":4026531861},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1953,"byte_end":1958,"line_start":22,"line_end":22,"column_start":22,"column_end":27},"name":"start","qualname":"start$HirId { owner: DefId(0:21 ~ algorithm[9589]::allocator::stacked_allocator::{impl#0}::alloc), local_id: 15 }","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":134217749},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1960,"byte_end":1963,"line_start":22,"line_end":22,"column_start":29,"column_end":32},"name":"end","qualname":"end$HirId { owner: DefId(0:21 ~ algorithm[9589]::allocator::stacked_allocator::{impl#0}::alloc), local_id: 16 }","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741846},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2178,"byte_end":2182,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"name":"self","qualname":"<StackedAllocator as allocator::Allocator>::dealloc::self","value":"&mut allocator::stacked_allocator::StackedAllocator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":536870934},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2184,"byte_end":2189,"line_start":32,"line_end":32,"column_start":27,"column_end":32},"name":"index","qualname":"<StackedAllocator as allocator::Allocator>::dealloc::index","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2165,"byte_end":2172,"line_start":32,"line_end":32,"column_start":8,"column_end":15},"name":"dealloc","qualname":"<StackedAllocator as allocator::Allocator>::dealloc","value":"fn dealloc(&mut Self, usize)","parent":{"krate":0,"index":46},"children":[],"decl_id":{"krate":0,"index":49},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":23},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bitmap_vector_allocator","qualname":"::allocator::bitmap_vector_allocator","value":"src/allocator/bitmap_vector_allocator.rs","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":38}],"decl_id":null,"docs":" 提供向量分配器的简单实现 [`BitmapVectorAllocator`]\n","sig":null,"attributes":[{"value":"/ 提供向量分配器的简单实现 [`BitmapVectorAllocator`]","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2253,"byte_end":2319,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":33},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2433,"byte_end":2444,"line_start":8,"line_end":8,"column_start":7,"column_end":18},"name":"BITMAP_SIZE","qualname":"::allocator::bitmap_vector_allocator::BITMAP_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Bitmap 中的位数（4K）\n","sig":null,"attributes":[{"value":"/ Bitmap 中的位数（4K）","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2395,"byte_end":2426,"line_start":7,"line_end":7,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2534,"byte_end":2555,"line_start":11,"line_end":11,"column_start":12,"column_end":33},"name":"BitmapVectorAllocator","qualname":"::allocator::bitmap_vector_allocator::BitmapVectorAllocator","value":"BitmapVectorAllocator { capacity, bitmap }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" 向量分配器的简单实现，每字节用一位表示\n","sig":null,"attributes":[{"value":"/ 向量分配器的简单实现，每字节用一位表示","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2461,"byte_end":2522,"line_start":10,"line_end":10,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2654,"byte_end":2662,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"capacity","qualname":"::allocator::bitmap_vector_allocator::BitmapVectorAllocator::capacity","value":"usize","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" 容量，单位为 bitmap 中可以使用的位数，即待分配空间的字节数\n","sig":null,"attributes":[{"value":"/ 容量，单位为 bitmap 中可以使用的位数，即待分配空间的字节数","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2562,"byte_end":2649,"line_start":12,"line_end":12,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":36},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2708,"byte_end":2714,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"bitmap","qualname":"::allocator::bitmap_vector_allocator::BitmapVectorAllocator::bitmap","value":"[u8; _]","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" 每一位 0 表示空闲\n","sig":null,"attributes":[{"value":"/ 每一位 0 表示空闲","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2675,"byte_end":2703,"line_start":14,"line_end":14,"column_start":5,"column_end":19}}]},{"kind":"Local","id":{"krate":0,"index":1073741863},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2802,"byte_end":2810,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::new::capacity","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2798,"byte_end":2801,"line_start":19,"line_end":19,"column_start":8,"column_end":11},"name":"new","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::new","value":"fn new(usize) -> Self","parent":{"krate":0,"index":50},"children":[],"decl_id":{"krate":0,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741865},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2972,"byte_end":2976,"line_start":25,"line_end":25,"column_start":19,"column_end":23},"name":"self","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::alloc::self","value":"&mut allocator::bitmap_vector_allocator::BitmapVectorAllocator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":536870953},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2978,"byte_end":2982,"line_start":25,"line_end":25,"column_start":25,"column_end":29},"name":"size","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::alloc::size","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1610612777},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2991,"byte_end":2996,"line_start":25,"line_end":25,"column_start":38,"column_end":43},"name":"align","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::alloc::align","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2961,"byte_end":2966,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"alloc","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::alloc","value":"fn alloc(&mut Self, usize, usize) -> Option<usize>","parent":{"krate":0,"index":50},"children":[],"decl_id":{"krate":0,"index":52},"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2214592553},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3045,"byte_end":3085,"line_start":26,"line_end":26,"column_start":22,"column_end":62},"name":"iter","qualname":"iter$HirId { owner: DefId(0:41 ~ algorithm[9589]::allocator::bitmap_vector_allocator::{impl#0}::alloc), local_id: 33 }","value":"core::iter::StepBy<core::ops::Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":2818572329},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3045,"byte_end":3085,"line_start":26,"line_end":26,"column_start":22,"column_end":62},"name":"__next","qualname":"__next$HirId { owner: DefId(0:41 ~ algorithm[9589]::allocator::bitmap_vector_allocator::{impl#0}::alloc), local_id: 21 }","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1744830505},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3036,"byte_end":3041,"line_start":26,"line_end":26,"column_start":13,"column_end":18},"name":"val","qualname":"val$HirId { owner: DefId(0:41 ~ algorithm[9589]::allocator::bitmap_vector_allocator::{impl#0}::alloc), local_id: 22 }","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":3556769833},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3036,"byte_end":3041,"line_start":26,"line_end":26,"column_start":13,"column_end":18},"name":"start","qualname":"start$HirId { owner: DefId(0:41 ~ algorithm[9589]::allocator::bitmap_vector_allocator::{impl#0}::alloc), local_id: 43 }","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1543503913},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3130,"byte_end":3131,"line_start":27,"line_end":27,"column_start":43,"column_end":44},"name":"i","qualname":"$HirId { owner: DefId(0:41 ~ algorithm[9589]::allocator::bitmap_vector_allocator::{impl#0}::alloc), local_id: 68 }::i","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1241514025},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3208,"byte_end":3209,"line_start":28,"line_end":28,"column_start":49,"column_end":50},"name":"i","qualname":"$HirId { owner: DefId(0:41 ~ algorithm[9589]::allocator::bitmap_vector_allocator::{impl#0}::alloc), local_id: 92 }::i","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741868},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3341,"byte_end":3345,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"name":"self","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::dealloc::self","value":"&mut allocator::bitmap_vector_allocator::BitmapVectorAllocator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":536870956},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3347,"byte_end":3352,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"name":"start","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::dealloc::start","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1610612780},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3361,"byte_end":3365,"line_start":34,"line_end":34,"column_start":41,"column_end":45},"name":"size","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::dealloc::size","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":268435500},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3374,"byte_end":3380,"line_start":34,"line_end":34,"column_start":54,"column_end":60},"name":"_align","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::dealloc::_align","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3328,"byte_end":3335,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"dealloc","qualname":"<BitmapVectorAllocator as allocator::VectorAllocator>::dealloc","value":"fn dealloc(&mut Self, usize, usize, usize)","parent":{"krate":0,"index":50},"children":[],"decl_id":{"krate":0,"index":53},"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":3825205292},"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3476,"byte_end":3477,"line_start":36,"line_end":36,"column_start":41,"column_end":42},"name":"i","qualname":"$HirId { owner: DefId(0:44 ~ algorithm[9589]::allocator::bitmap_vector_allocator::{impl#0}::dealloc), local_id: 49 }::i","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"src/allocator/mod.rs","byte_start":361,"byte_end":370,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"Allocator","qualname":"::allocator::Allocator","value":"Allocator","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" 分配器：固定容量，每次分配 / 回收一个元素\n","sig":null,"attributes":[{"value":"/ 分配器：固定容量，每次分配 / 回收一个元素","span":{"file_name":"src/allocator/mod.rs","byte_start":286,"byte_end":350,"line_start":6,"line_end":6,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"src/allocator/mod.rs","byte_start":419,"byte_end":422,"line_start":9,"line_end":9,"column_start":8,"column_end":11},"name":"new","qualname":"::allocator::Allocator::new","value":"pub fn new(usize) -> Self","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" 给定容量，创建分配器\n","sig":null,"attributes":[{"value":"/ 给定容量，创建分配器","span":{"file_name":"src/allocator/mod.rs","byte_start":377,"byte_end":411,"line_start":8,"line_end":8,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"src/allocator/mod.rs","byte_start":514,"byte_end":519,"line_start":11,"line_end":11,"column_start":8,"column_end":13},"name":"alloc","qualname":"::allocator::Allocator::alloc","value":"pub fn alloc(&mut Self) -> Option<usize>","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" 分配一个元素，无法分配则返回 `None`\n","sig":null,"attributes":[{"value":"/ 分配一个元素，无法分配则返回 `None`","span":{"file_name":"src/allocator/mod.rs","byte_start":453,"byte_end":506,"line_start":10,"line_end":10,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"src/allocator/mod.rs","byte_start":583,"byte_end":590,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"dealloc","qualname":"::allocator::Allocator::dealloc","value":"pub fn dealloc(&mut Self, usize)","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" 回收一个元素\n","sig":null,"attributes":[{"value":"/ 回收一个元素","span":{"file_name":"src/allocator/mod.rs","byte_start":553,"byte_end":575,"line_start":12,"line_end":12,"column_start":5,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"src/allocator/mod.rs","byte_start":819,"byte_end":834,"line_start":19,"line_end":19,"column_start":11,"column_end":26},"name":"VectorAllocator","qualname":"::allocator::VectorAllocator","value":"VectorAllocator","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" 向量分配器：固定容量，每次分配 / 回收一个带有对齐要求的连续向量","sig":null,"attributes":[{"value":"/ 向量分配器：固定容量，每次分配 / 回收一个带有对齐要求的连续向量","span":{"file_name":"src/allocator/mod.rs","byte_start":620,"byte_end":717,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"src/allocator/mod.rs","byte_start":718,"byte_end":721,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ 参数和返回值中的 usize 表示第 n 个字节，不需要考虑起始地址","span":{"file_name":"src/allocator/mod.rs","byte_start":722,"byte_end":808,"line_start":18,"line_end":18,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"src/allocator/mod.rs","byte_start":883,"byte_end":886,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"new","qualname":"::allocator::VectorAllocator::new","value":"pub fn new(usize) -> Self","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" 给定容量，创建分配器\n","sig":null,"attributes":[{"value":"/ 给定容量，创建分配器","span":{"file_name":"src/allocator/mod.rs","byte_start":841,"byte_end":875,"line_start":20,"line_end":20,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"src/allocator/mod.rs","byte_start":987,"byte_end":992,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"alloc","qualname":"::allocator::VectorAllocator::alloc","value":"pub fn alloc(&mut Self, usize, usize) -> Option<usize>","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" 分配指定长度的空间，无法分配则返回 `None`\n","sig":null,"attributes":[{"value":"/ 分配指定长度的空间，无法分配则返回 `None`","span":{"file_name":"src/allocator/mod.rs","byte_start":917,"byte_end":979,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"src/allocator/mod.rs","byte_start":1113,"byte_end":1120,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"dealloc","qualname":"::allocator::VectorAllocator::dealloc","value":"pub fn dealloc(&mut Self, usize, usize, usize)","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" 回收指定空间（一定是之前分配的）\n","sig":null,"attributes":[{"value":"/ 回收指定空间（一定是之前分配的）","span":{"file_name":"src/allocator/mod.rs","byte_start":1053,"byte_end":1105,"line_start":24,"line_end":24,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":"src/allocator/mod.rs","byte_start":1317,"byte_end":1330,"line_start":32,"line_end":32,"column_start":10,"column_end":23},"name":"AllocatorImpl","qualname":"::allocator::AllocatorImpl","value":"StackedAllocator","parent":null,"children":[],"decl_id":null,"docs":" 默认使用的分配器\n","sig":null,"attributes":[{"value":"/ 默认使用的分配器","span":{"file_name":"src/allocator/mod.rs","byte_start":1279,"byte_end":1307,"line_start":31,"line_end":31,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":61},"span":{"file_name":"src/allocator/mod.rs","byte_start":1361,"byte_end":1380,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"name":"VectorAllocatorImpl","qualname":"::allocator::VectorAllocatorImpl","value":"BitmapVectorAllocator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1761,"byte_end":1777,"line_start":14,"line_end":14,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2767,"byte_end":2788,"line_start":18,"line_end":18,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":156,"byte_end":165,"line_start":8,"line_end":8,"column_start":5,"column_end":14},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"src/allocator/mod.rs","byte_start":237,"byte_end":254,"line_start":3,"line_end":3,"column_start":5,"column_end":22},"ref_id":{"krate":0,"index":6}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1470,"byte_end":1475,"line_start":3,"line_end":3,"column_start":5,"column_end":10},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1492,"byte_end":1497,"line_start":4,"line_end":4,"column_start":5,"column_end":10},"ref_id":{"krate":4,"index":5981}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1492,"byte_end":1497,"line_start":4,"line_end":4,"column_start":5,"column_end":10},"ref_id":{"krate":4,"index":6769}},{"kind":"Mod","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1505,"byte_end":1508,"line_start":4,"line_end":4,"column_start":18,"column_end":21},"ref_id":{"krate":4,"index":5981}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1718,"byte_end":1721,"line_start":11,"line_end":11,"column_start":11,"column_end":14},"ref_id":{"krate":4,"index":6769}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1761,"byte_end":1777,"line_start":14,"line_end":14,"column_start":20,"column_end":36},"ref_id":{"krate":0,"index":17}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1747,"byte_end":1756,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"ref_id":{"krate":0,"index":46}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1826,"byte_end":1830,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":17}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1845,"byte_end":1849,"line_start":17,"line_end":17,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":18}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1860,"byte_end":1868,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"ref_id":{"krate":0,"index":1073741844}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1916,"byte_end":1922,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"ref_id":{"krate":1,"index":31899}},{"kind":"Function","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1978,"byte_end":1981,"line_start":22,"line_end":22,"column_start":47,"column_end":50},"ref_id":{"krate":4,"index":6841}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1968,"byte_end":1972,"line_start":22,"line_end":22,"column_start":37,"column_end":41},"ref_id":{"krate":0,"index":1073741845}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1973,"byte_end":1977,"line_start":22,"line_end":22,"column_start":42,"column_end":46},"ref_id":{"krate":0,"index":18}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1947,"byte_end":1951,"line_start":22,"line_end":22,"column_start":16,"column_end":20},"ref_id":{"krate":1,"index":31903}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1947,"byte_end":1951,"line_start":22,"line_end":22,"column_start":16,"column_end":20},"ref_id":{"krate":1,"index":31903}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2001,"byte_end":2004,"line_start":23,"line_end":23,"column_start":16,"column_end":19},"ref_id":{"krate":0,"index":134217749}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2007,"byte_end":2012,"line_start":23,"line_end":23,"column_start":22,"column_end":27},"ref_id":{"krate":0,"index":4026531861}},{"kind":"Function","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2045,"byte_end":2049,"line_start":24,"line_end":24,"column_start":27,"column_end":31},"ref_id":{"krate":4,"index":6840}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2035,"byte_end":2039,"line_start":24,"line_end":24,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":1073741845}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2040,"byte_end":2044,"line_start":24,"line_end":24,"column_start":22,"column_end":26},"ref_id":{"krate":0,"index":18}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2051,"byte_end":2056,"line_start":24,"line_end":24,"column_start":33,"column_end":38},"ref_id":{"krate":0,"index":4026531861}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2062,"byte_end":2065,"line_start":24,"line_end":24,"column_start":44,"column_end":47},"ref_id":{"krate":0,"index":134217749}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2095,"byte_end":2099,"line_start":26,"line_end":26,"column_start":13,"column_end":17},"ref_id":{"krate":1,"index":31903}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2100,"byte_end":2105,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"ref_id":{"krate":0,"index":4026531861}},{"kind":"Type","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2136,"byte_end":2140,"line_start":28,"line_end":28,"column_start":13,"column_end":17},"ref_id":{"krate":1,"index":31901}},{"kind":"Function","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2218,"byte_end":2222,"line_start":33,"line_end":33,"column_start":19,"column_end":23},"ref_id":{"krate":4,"index":6840}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2208,"byte_end":2212,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1073741846}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2213,"byte_end":2217,"line_start":33,"line_end":33,"column_start":14,"column_end":18},"ref_id":{"krate":0,"index":18}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2224,"byte_end":2229,"line_start":33,"line_end":33,"column_start":25,"column_end":30},"ref_id":{"krate":0,"index":536870934}},{"kind":"Variable","span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":2231,"byte_end":2236,"line_start":33,"line_end":33,"column_start":32,"column_end":37},"ref_id":{"krate":0,"index":536870934}},{"kind":"Mod","span":{"file_name":"src/allocator/mod.rs","byte_start":260,"byte_end":283,"line_start":4,"line_end":4,"column_start":5,"column_end":28},"ref_id":{"krate":0,"index":23}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2325,"byte_end":2330,"line_start":3,"line_end":3,"column_start":5,"column_end":10},"ref_id":{"krate":0,"index":50}},{"kind":"Mod","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2353,"byte_end":2362,"line_start":4,"line_end":4,"column_start":5,"column_end":14},"ref_id":{"krate":5,"index":0}},{"kind":"Mod","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2378,"byte_end":2382,"line_start":5,"line_end":5,"column_start":5,"column_end":9},"ref_id":{"krate":1,"index":0}},{"kind":"Mod","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2384,"byte_end":2387,"line_start":5,"line_end":5,"column_start":11,"column_end":14},"ref_id":{"krate":1,"index":2474}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2721,"byte_end":2732,"line_start":15,"line_end":15,"column_start":18,"column_end":29},"ref_id":{"krate":0,"index":33}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2767,"byte_end":2788,"line_start":18,"line_end":18,"column_start":26,"column_end":47},"ref_id":{"krate":0,"index":34}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2747,"byte_end":2762,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"ref_id":{"krate":0,"index":50}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2837,"byte_end":2841,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":34}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2856,"byte_end":2864,"line_start":21,"line_end":21,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":35}},{"kind":"Function","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2866,"byte_end":2869,"line_start":21,"line_end":21,"column_start":23,"column_end":26},"ref_id":{"krate":1,"index":2527}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2870,"byte_end":2881,"line_start":21,"line_end":21,"column_start":27,"column_end":38},"ref_id":{"krate":0,"index":33}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2883,"byte_end":2891,"line_start":21,"line_end":21,"column_start":40,"column_end":48},"ref_id":{"krate":0,"index":1073741863}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2906,"byte_end":2912,"line_start":22,"line_end":22,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":36}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2920,"byte_end":2931,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"ref_id":{"krate":0,"index":33}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3008,"byte_end":3014,"line_start":25,"line_end":25,"column_start":55,"column_end":61},"ref_id":{"krate":1,"index":31899}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3046,"byte_end":3069,"line_start":26,"line_end":26,"column_start":23,"column_end":46},"ref_id":{"krate":1,"index":30503}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3046,"byte_end":3047,"line_start":26,"line_end":26,"column_start":23,"column_end":24},"ref_id":{"krate":1,"index":30505}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3049,"byte_end":3069,"line_start":26,"line_end":26,"column_start":26,"column_end":46},"ref_id":{"krate":1,"index":30506}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3049,"byte_end":3053,"line_start":26,"line_end":26,"column_start":26,"column_end":30},"ref_id":{"krate":0,"index":1073741865}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3054,"byte_end":3062,"line_start":26,"line_end":26,"column_start":31,"column_end":39},"ref_id":{"krate":0,"index":35}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3065,"byte_end":3069,"line_start":26,"line_end":26,"column_start":42,"column_end":46},"ref_id":{"krate":0,"index":536870953}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3079,"byte_end":3084,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"ref_id":{"krate":0,"index":1610612777}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3036,"byte_end":3041,"line_start":26,"line_end":26,"column_start":13,"column_end":18},"ref_id":{"krate":1,"index":31905}},{"kind":"Function","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3125,"byte_end":3128,"line_start":27,"line_end":27,"column_start":38,"column_end":41},"ref_id":{"krate":1,"index":7284}},{"kind":"Function","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3146,"byte_end":3153,"line_start":27,"line_end":27,"column_start":59,"column_end":66},"ref_id":{"krate":5,"index":25}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3134,"byte_end":3138,"line_start":27,"line_end":27,"column_start":47,"column_end":51},"ref_id":{"krate":0,"index":1073741865}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3139,"byte_end":3145,"line_start":27,"line_end":27,"column_start":52,"column_end":58},"ref_id":{"krate":0,"index":36}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3154,"byte_end":3155,"line_start":27,"line_end":27,"column_start":67,"column_end":68},"ref_id":{"krate":0,"index":1543503913}},{"kind":"Function","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3198,"byte_end":3206,"line_start":28,"line_end":28,"column_start":39,"column_end":47},"ref_id":{"krate":1,"index":7202}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3177,"byte_end":3196,"line_start":28,"line_end":28,"column_start":18,"column_end":37},"ref_id":{"krate":1,"index":30503}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3177,"byte_end":3182,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"ref_id":{"krate":1,"index":30505}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3177,"byte_end":3182,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"ref_id":{"krate":0,"index":3556769833}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3184,"byte_end":3196,"line_start":28,"line_end":28,"column_start":25,"column_end":37},"ref_id":{"krate":1,"index":30506}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3184,"byte_end":3189,"line_start":28,"line_end":28,"column_start":25,"column_end":30},"ref_id":{"krate":0,"index":3556769833}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3192,"byte_end":3196,"line_start":28,"line_end":28,"column_start":33,"column_end":37},"ref_id":{"krate":0,"index":536870953}},{"kind":"Function","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3223,"byte_end":3230,"line_start":28,"line_end":28,"column_start":64,"column_end":71},"ref_id":{"krate":5,"index":28}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3211,"byte_end":3215,"line_start":28,"line_end":28,"column_start":52,"column_end":56},"ref_id":{"krate":0,"index":1073741865}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3216,"byte_end":3222,"line_start":28,"line_end":28,"column_start":57,"column_end":63},"ref_id":{"krate":0,"index":36}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3231,"byte_end":3232,"line_start":28,"line_end":28,"column_start":72,"column_end":73},"ref_id":{"krate":0,"index":1241514025}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3265,"byte_end":3269,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"ref_id":{"krate":1,"index":31903}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3270,"byte_end":3275,"line_start":29,"line_end":29,"column_start":29,"column_end":34},"ref_id":{"krate":0,"index":3556769833}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3310,"byte_end":3314,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"ref_id":{"krate":1,"index":31901}},{"kind":"Function","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3419,"byte_end":3426,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"ref_id":{"krate":5,"index":25}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3407,"byte_end":3411,"line_start":35,"line_end":35,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":1073741868}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3412,"byte_end":3418,"line_start":35,"line_end":35,"column_start":22,"column_end":28},"ref_id":{"krate":0,"index":36}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3427,"byte_end":3432,"line_start":35,"line_end":35,"column_start":37,"column_end":42},"ref_id":{"krate":0,"index":536870956}},{"kind":"Function","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3466,"byte_end":3474,"line_start":36,"line_end":36,"column_start":31,"column_end":39},"ref_id":{"krate":1,"index":7202}},{"kind":"Type","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3445,"byte_end":3464,"line_start":36,"line_end":36,"column_start":10,"column_end":29},"ref_id":{"krate":1,"index":30503}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3445,"byte_end":3450,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"ref_id":{"krate":1,"index":30505}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3445,"byte_end":3450,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"ref_id":{"krate":0,"index":536870956}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3452,"byte_end":3464,"line_start":36,"line_end":36,"column_start":17,"column_end":29},"ref_id":{"krate":1,"index":30506}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3452,"byte_end":3457,"line_start":36,"line_end":36,"column_start":17,"column_end":22},"ref_id":{"krate":0,"index":536870956}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3460,"byte_end":3464,"line_start":36,"line_end":36,"column_start":25,"column_end":29},"ref_id":{"krate":0,"index":1610612780}},{"kind":"Function","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3491,"byte_end":3498,"line_start":36,"line_end":36,"column_start":56,"column_end":63},"ref_id":{"krate":5,"index":28}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3479,"byte_end":3483,"line_start":36,"line_end":36,"column_start":44,"column_end":48},"ref_id":{"krate":0,"index":1073741868}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3484,"byte_end":3490,"line_start":36,"line_end":36,"column_start":49,"column_end":55},"ref_id":{"krate":0,"index":36}},{"kind":"Variable","span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":3499,"byte_end":3500,"line_start":36,"line_end":36,"column_start":64,"column_end":65},"ref_id":{"krate":0,"index":3825205292}},{"kind":"Type","span":{"file_name":"src/allocator/mod.rs","byte_start":534,"byte_end":540,"line_start":11,"line_end":11,"column_start":28,"column_end":34},"ref_id":{"krate":1,"index":31899}},{"kind":"Type","span":{"file_name":"src/allocator/mod.rs","byte_start":1034,"byte_end":1040,"line_start":23,"line_end":23,"column_start":55,"column_end":61},"ref_id":{"krate":1,"index":31899}},{"kind":"Mod","span":{"file_name":"src/allocator/mod.rs","byte_start":1185,"byte_end":1202,"line_start":28,"line_end":28,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"src/allocator/mod.rs","byte_start":1230,"byte_end":1253,"line_start":29,"line_end":29,"column_start":9,"column_end":32},"ref_id":{"krate":0,"index":23}},{"kind":"Type","span":{"file_name":"src/allocator/mod.rs","byte_start":1333,"byte_end":1349,"line_start":32,"line_end":32,"column_start":26,"column_end":42},"ref_id":{"krate":0,"index":17}},{"kind":"Type","span":{"file_name":"src/allocator/mod.rs","byte_start":1383,"byte_end":1404,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":176,"byte_end":185,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":5}}],"macro_refs":[],"relations":[{"span":{"file_name":"src/allocator/stacked_allocator.rs","byte_start":1761,"byte_end":1777,"line_start":14,"line_end":14,"column_start":20,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":0,"index":46}},{"span":{"file_name":"src/allocator/bitmap_vector_allocator.rs","byte_start":2767,"byte_end":2788,"line_start":18,"line_end":18,"column_start":26,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":34},"to":{"krate":0,"index":50}}]}